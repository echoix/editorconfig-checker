# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
project_name: editorconfig-checker
before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - # ID of the build.
    # Defaults to the binary name.
    id: "editorconfig-checker"

    # Path to main.go file or main package.
    # Notice: when used with `gomod.proxy`, this must be a package.
    #
    # Default is `.`.
    main: ./cmd/editorconfig-checker
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

    # Set the modified timestamp on the output binary, typically
    # you would do this to ensure a build was reproducible. Pass
    # empty string to skip modifying the output.
    # Default is empty string, which will be the compile time.
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    # Custom ldflags templates.
    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
    # The goal of the changes to the default flags is to make reproducible builds.
    ldflags:
      - -s -w -X main.version={{.Version}}
      - -X main.commit={{.Commit}} -X main.date={{.CommitDate}}
      - -X main.builtBy=goreleaser

# GoReleaser can create macOS Universal Binaries - also known as Fat Binaries.
# Those binaries are in a special format that contains both `arm64` and `amd64`
# executables in a single file.
universal_binaries:
  # Whether to remove the previous single-arch binaries from the artifact list.
  # If left as false, your end release might have both several macOS archives:
  # amd64, arm64 and all.
  #
  # Defaults to false.
  - replace: true
archives:
  - # ID of this archive.
    # Defaults to `default`.
    id: archive-editorconfig-checker

    # Builds reference which build instances should be archived in this archive.
    # Default is empty, which includes all builds.
    builds:
      - editorconfig-checker

    format: tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip
    # This will make the destination paths be relative to the longest common
    # path prefix between all the files matched and the source glob.
    # Enabling this essentially mimic the behavior of nfpm's contents section.
    # It will be the default by June 2023.
    #
    # Default: false
    # Since: v1.14.
    rlcp: true

checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
# The lines beneath this are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
